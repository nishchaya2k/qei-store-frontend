{"ast":null,"code":"var _jsxFileName = \"/Users/nishchayanarula/Desktop/simple-one 2/client/src/components/Products/Products.jsx\",\n  _s = $RefreshSig$();\nimport \"./Products.scss\";\nimport Product from \"./Product/Product\";\nimport Sort from \"./Sort.jsx\";\nimport useFetch from \"../../hooks/useFetch.js\";\nimport Select from \"react-select\";\nimport { useState } from \"react\";\nimport { fetchDataFromApi } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filters = {};\nconst sortbyData = [{\n  value: \"title:asc\",\n  label: \"Price(a-z)\"\n},\n//after clicking on the label we send value on the endpoint\n{\n  value: \"price\",\n  label: \"Price(lowest)\"\n}, {\n  value: \"price:desc\",\n  label: \"Price(highest)\"\n}\n// { value: \"vote_average.asc\", label: \"Rating Ascending\" },\n];\nconst Products = ({\n  products,\n  setProducts,\n  innerPage,\n  headingText,\n  homePage\n}) => {\n  _s();\n  var _products$data;\n  const [sortby, setSortby] = useState(null);\n  const fetchSortedData = () => {\n    fetchDataFromApi(`/api/products?populate=*&sort[0]=${filters.sort_by}`).then(res => (setProducts(res), console.log(res)));\n    // console.log(products);\n  };\n  const defaultData = () => {\n    fetchDataFromApi(\"/api/products?populate=*\").then(res => (setProducts(res), console.log(res)));\n  };\n  const onChange = (selectedItems, action) => {\n    setSortby(selectedItems);\n    if (action.action !== \"clear\") {\n      filters.sort_by = selectedItems.value; //filters is object declared on the top & sort_by(array declared & initialize here) is a key\n      fetchSortedData();\n    } else {\n      delete filters.sort_by;\n      defaultData();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"products-container\",\n    children: [!innerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${homePage ? \"top-heading\" : \"\"}`,\n      children: [\"   \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sec-heading\",\n        children: headingText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), homePage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          name: \"sortby\",\n          value: sortby,\n          options: sortbyData,\n          onChange: onChange,\n          isClearable: true,\n          placeholder: \"Sort by\",\n          className: \"react-select-container sortbyDD\",\n          classNamePrefix: \"react-select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `products ${innerPage ? \"innerPage\" : \"\"}`,\n      children: products === null || products === void 0 ? void 0 : (_products$data = products.data) === null || _products$data === void 0 ? void 0 : _products$data.map(item => /*#__PURE__*/_jsxDEV(Product, {\n        id: item.id,\n        data: item.attributes\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Products, \"c82rG9ViInaruS7Mz0wgRq9DvFk=\");\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["Product","Sort","useFetch","Select","useState","fetchDataFromApi","jsxDEV","_jsxDEV","filters","sortbyData","value","label","Products","products","setProducts","innerPage","headingText","homePage","_s","_products$data","sortby","setSortby","fetchSortedData","sort_by","then","res","console","log","defaultData","onChange","selectedItems","action","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","options","isClearable","placeholder","classNamePrefix","data","map","item","id","attributes","_c","$RefreshReg$"],"sources":["/Users/nishchayanarula/Desktop/simple-one 2/client/src/components/Products/Products.jsx"],"sourcesContent":["import \"./Products.scss\";\nimport Product from \"./Product/Product\";\nimport Sort from \"./Sort.jsx\"\nimport useFetch from \"../../hooks/useFetch.js\";\nimport Select from \"react-select\";\nimport { useState } from \"react\";\nimport { fetchDataFromApi } from \"../../utils/api\";\n\nconst filters = {};\n\nconst sortbyData = [\n    { value: \"title:asc\", label: \"Price(a-z)\" }, //after clicking on the label we send value on the endpoint\n    { value: \"price\", label: \"Price(lowest)\" },\n    { value: \"price:desc\", label: \"Price(highest)\" },\n    // { value: \"vote_average.asc\", label: \"Rating Ascending\" },\n];\n\n\nconst Products = ({ products,setProducts, innerPage, headingText,homePage}) => {\n\n    const [sortby, setSortby] = useState(null);\n    \n    const fetchSortedData = () => {\n        fetchDataFromApi(`/api/products?populate=*&sort[0]=${filters.sort_by}`).then((res) => (\n            setProducts(res),\n            console.log(res)\n        ))\n        // console.log(products);\n    }\n    \n    const defaultData = () => {\n        fetchDataFromApi(\"/api/products?populate=*\").then((res) => (\n            setProducts(res),\n            console.log(res)\n        ))\n    }\n\n\n    const onChange = (selectedItems, action) => {\n        setSortby(selectedItems);\n        if (action.action !== \"clear\") {\n            filters.sort_by = selectedItems.value; //filters is object declared on the top & sort_by(array declared & initialize here) is a key\n            fetchSortedData();\n        } else {\n            delete filters.sort_by;\n            defaultData();\n        }\n    }\n    return (\n        <div className=\"products-container\">\n            {/* heading */}\n            {!innerPage && \n                <div className={`${homePage ? \"top-heading\" : \"\"}`}>   {/* we used this becoz of dropdown, so it will active for homepage only */}\n                    <div className=\"sec-heading\">{headingText}</div>\n                    {homePage && <div>\n                        <Select\n                                name=\"sortby\"\n                                value={sortby}\n                                options={sortbyData}\n                                onChange={onChange}\n                                isClearable={true}\n                                placeholder=\"Sort by\"\n                                className=\"react-select-container sortbyDD\"\n                                classNamePrefix=\"react-select\"\n                        />\n                    </div>}\n                </div>\n            }\n            {/* products */}\n            <div className={`products ${innerPage ? \"innerPage\" : \"\"}`}>\n                {products?.data?.map((item) => (\n                    <Product\n                        key={item.id}\n                        id={item.id}\n                        data={item.attributes}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Products;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}