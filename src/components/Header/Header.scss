@import "../../css-config/mixins.scss";
//scss have nesting feature

.main-header{
    width: 100%;
    padding: 0 20px; //top-bottom 0, left-right 20px
    background-color: #212121;
    color: white;
    border-bottom: 1px solid rgba(0,0,0,0.1 ); //border opacity 0.1
    z-index: 99;

    @include md {
        padding: 0 40px;
    }  
    .header-content{
        display: flex;
        justify-content: space-between;
        align-items: center;
        height: 50px;
        max-width: 1200px;
        margin: 0 auto;

        @include md{
            height: 80px;
        }

        .left{
            list-style: none;
            display: flex;
            gap: 25px;
            display: none;  

            @include md{
                display: flex;
            }

            li{
                font-size: 14px;
                font-weight: 600;
                text-transform: uppercase;
                cursor: pointer;
            }
        }
        .center{
            font-size: 22px;
            font-weight: 700;
            cursor:  pointer;
            @include md{
                font-size: 34px;
                position: absolute;
                left: 50%;
                transform: translateX(-50%);
            }
        }

        .right{
            display: flex;
            align-items: center;
            gap: 20px;
            @include md{
                gap: 25px;
            }

            svg{                            //we can directly write svg, when we want to apply css directly on icon
                font-size: 20px;
                cursor: pointer;
                @include md{
                    font-size: 24px;
                }
            }
            .cart-icon{                    //css for cart counter, means value we add on cart which like 1,2,3,..etc
                 position: relative;
                 span{
                    min-width: 20px;
                    text-align: center;
                    background-color: #8e2de2;
                    position: absolute;  //we have made its parent relative so that we cam make it absolute 
                    padding: 2.5px;
                    top: -5px;
                    right: -12px;
                    font-size: 12px; 
                    line-height: 1;
                    border-radius: 10px;
                 }
            }
        }
    }

    &.sticky-header{
        position: sticky;
        top: 0;
        transform: translateY(-80%); //copied from 0% below, its a best practice
        animation: stickyHeader 0.3s ease forwards;
    }
}


@keyframes stickyHeader {
    0%{
        transform: translateY(-80%);
    }
    100%{
        transform: translate(0%);
    }
}